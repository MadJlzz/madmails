name: "CI"

# Controls when the workflow will run
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  ci:
    name: "Format, lint and test"
    runs-on: ubuntu-latest
    steps:

      - name: "Checkout Git repository"
        uses: actions/checkout@v2

      - name: "test docker"
        run: docker --version

      - name: "Setup Python 3.9.6"
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.6

      - name: "Install Poetry"
        uses: snok/install-poetry@v1
        with:
          version: 1.1.8
          virtualenvs-in-project: true

      - name: "Load cached dependencies from venv"
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: "Install dependencies"
        run: poetry install --no-interaction
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: "Run yapf linting"
        run: |
          source .venv/bin/activate
          yapf --diff $(git ls-files '*.py')

      - name: "Run pylint linting"
        run: |
          source .venv/bin/activate
          pylint $(git ls-files '*.py')

      - name: "Run mypy linting"
        run: |
          source .venv/bin/activate
          mypy $(git ls-files '*.py') --ignore-missing-imports

      - name: "Run tests with pytest"
        run: |
          source .venv/bin/activate
          pytest tests/
